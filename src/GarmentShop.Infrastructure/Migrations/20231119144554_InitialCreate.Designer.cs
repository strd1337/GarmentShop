// <auto-generated />
using System;
using GarmentShop.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GarmentShop.Infrastructure.Migrations
{
    [DbContext(typeof(GarmentShopDbContext))]
    [Migration("20231119144554_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GarmentShop.Domain.AuthenticationAggregate.Authentication", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RegisteredUsers");
                });

            modelBuilder.Entity("GarmentShop.Domain.BrandAggregate.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("GarmentShop.Domain.Common.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Error")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("GarmentShop.Domain.Common.Outbox.OutboxMessageConsumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessageConsumers");
                });

            modelBuilder.Entity("GarmentShop.Domain.GarmentAggregate.Garment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("GarmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Garments");
                });

            modelBuilder.Entity("GarmentShop.Domain.GarmentCategoryAggregate.GarmentCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GarmentCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6303),
                            Description = "Includes products specifically designed for mens.",
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6317),
                            Name = "For Men"
                        },
                        new
                        {
                            Id = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6320),
                            Description = "Includes products specifically designed for womens.",
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6322),
                            Name = "For Women"
                        },
                        new
                        {
                            Id = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6324),
                            Description = "Includes products specifically designed for young females.",
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6326),
                            Name = "For Girls"
                        },
                        new
                        {
                            Id = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6328),
                            Description = "Includes products specifically designed for young males.",
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(6330),
                            Name = "For Boys"
                        });
                });

            modelBuilder.Entity("GarmentShop.Domain.GarmentTypeAggregate.GarmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("GarmentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GarmentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad22a5d2-8ba2-48b3-a2b0-3a82a395a3d6"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2430),
                            Description = "General category for upper body garments with sleeves, often buttoned or collared.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2477),
                            Name = "Shirts"
                        },
                        new
                        {
                            Id = new Guid("893c7fb4-fd90-4fa4-8a3f-74dd8aa00625"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2482),
                            Description = "Denim trousers, typically made of heavy cotton, with sturdy seams and pockets.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2484),
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = new Guid("9e12dc05-a9ad-40d2-8759-32372d873d31"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2488),
                            Description = "Garments designed for wear outside other clothes, such as coats and jackets.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2490),
                            Name = "Outerwear"
                        },
                        new
                        {
                            Id = new Guid("3c36dae5-3727-42fc-928e-44a0e4d55e11"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2493),
                            Description = "Knitted or crocheted garments worn on the upper body for warmth.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2495),
                            Name = "Sweaters"
                        },
                        new
                        {
                            Id = new Guid("e9bd971a-1d82-4a47-82f3-649a1e5dee8f"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2541),
                            Description = "Short-sleeved, typically cotton, casual shirt with a round neckline.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2543),
                            Name = "TShirts"
                        },
                        new
                        {
                            Id = new Guid("61f7a53c-d955-41e6-ab9b-c2d4c02992fe"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2547),
                            Description = "General category for lower body garments covering each leg separately.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2549),
                            Name = "Pants"
                        },
                        new
                        {
                            Id = new Guid("6724db4d-3369-4125-b6ad-a0468f0e1909"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2559),
                            Description = "Clothing suitable for sports or casual activities.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2561),
                            Name = "Sportswear"
                        },
                        new
                        {
                            Id = new Guid("2615a317-357f-4e70-ac0f-9a108a4ffcfe"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2565),
                            Description = "Short coat with sleeves, often lightweight and designed for specific purposes.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2567),
                            Name = "Jackets"
                        },
                        new
                        {
                            Id = new Guid("24e0f452-b115-4c5f-b01f-9e718d719340"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2571),
                            Description = "Garments that cover the body from the waist to the knees, typically worn in warm weather.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2573),
                            Name = "Shorts"
                        },
                        new
                        {
                            Id = new Guid("8c8be257-394f-45e7-a32b-e96e5df2e302"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2577),
                            Description = "Sleepwear, typically consisting of loose-fitting trousers and a top.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2579),
                            Name = "Pajamas"
                        },
                        new
                        {
                            Id = new Guid("54a344ca-c3e6-4019-b31a-3a610ae6ca78"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2583),
                            Description = "Casual athletic shoes with a flexible sole, suitable for sports or everyday wear.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2584),
                            Name = "Sneakers"
                        },
                        new
                        {
                            Id = new Guid("ded90707-3509-40eb-9b3a-fc781dcd2e62"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2588),
                            Description = "Footwear that covers the foot and ankle, often made of leather or rubber.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2590),
                            Name = "Boots"
                        },
                        new
                        {
                            Id = new Guid("b1f1f9fb-8429-4870-b37e-10f852e03fd4"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2594),
                            Description = "Comfortable, lightweight footwear for indoor use.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2596),
                            Name = "Slippers"
                        },
                        new
                        {
                            Id = new Guid("71d7d2e3-4483-474c-b577-ffb701352090"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2599),
                            Description = "Soft leather shoes, often with a sole made of one piece.",
                            GarmentCategoryId = new Guid("a062f965-8be6-4246-bed7-f14fb26cb386"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2601),
                            Name = "Moccasins"
                        },
                        new
                        {
                            Id = new Guid("e01739b4-a251-4de5-8007-1fa85baed35e"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2609),
                            Description = "Short-sleeved, typically cotton, casual shirt with a round neckline.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2611),
                            Name = "TShirts"
                        },
                        new
                        {
                            Id = new Guid("a346086f-98ec-413e-bc3a-f5fc707c2f33"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2615),
                            Description = "Denim trousers, typically made of heavy cotton, with sturdy seams and pockets.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2616),
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = new Guid("104721fa-f022-43a6-8615-3c5b8c78e816"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2620),
                            Description = "Knitted or crocheted garments worn on the upper body for warmth.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2622),
                            Name = "Sweaters"
                        },
                        new
                        {
                            Id = new Guid("6e53b8f1-0d63-4fd7-8e99-3f8fb2f6a5f0"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2626),
                            Description = "General category for lower body garments covering each leg separately.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2628),
                            Name = "Pants"
                        },
                        new
                        {
                            Id = new Guid("42d024ea-5aff-48a2-9c07-cebb7c8be9c6"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2632),
                            Description = "One-piece garments for women, typically with a fitted top and a flared skirt.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2634),
                            Name = "Dresses"
                        },
                        new
                        {
                            Id = new Guid("7203d6a8-0ac9-4943-9768-433fd2e0346c"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2637),
                            Description = "Garments designed for wear outside other clothes, such as coats and jackets.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2639),
                            Name = "Outerwear"
                        },
                        new
                        {
                            Id = new Guid("cb3b02b7-3ecf-4c33-a43b-9ada7c547f9e"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2643),
                            Description = "Garments that cover the body from the waist to the knees, typically worn in warm weather.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2645),
                            Name = "Shorts"
                        },
                        new
                        {
                            Id = new Guid("bbdcf22b-f940-416f-a6d8-964892c9d4d8"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2649),
                            Description = "General category for upper body garments, including blouses, shirts, and sweaters.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2650),
                            Name = "Tops"
                        },
                        new
                        {
                            Id = new Guid("3b2a8c72-bcff-4b7e-b8c1-cfb5eea2131d"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2657),
                            Description = "Short coat with sleeves, often lightweight and designed for specific purposes.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2659),
                            Name = "Jackets"
                        },
                        new
                        {
                            Id = new Guid("9df7cd94-5d88-483f-bcb9-00307c153307"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2663),
                            Description = "Clothing suitable for sports or casual activities.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2665),
                            Name = "Sportswear"
                        },
                        new
                        {
                            Id = new Guid("7709c02f-375f-4715-a7ba-566084c41b1f"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2669),
                            Description = "Garments worn around the waist, covering the lower body and often with a separate top.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2670),
                            Name = "Skirts"
                        },
                        new
                        {
                            Id = new Guid("547eebba-1344-4f51-a367-397016cbbd8d"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2674),
                            Description = "Sleepwear, typically consisting of loose-fitting trousers and a top.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2676),
                            Name = "Pajamas"
                        },
                        new
                        {
                            Id = new Guid("5620e701-4af2-423c-a18e-ac652eb0ec0c"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2680),
                            Description = "Casual athletic shoes with a flexible sole, suitable for sports or everyday wear.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2682),
                            Name = "Sneakers"
                        },
                        new
                        {
                            Id = new Guid("8e5d4837-e6d0-453b-b299-40c841a91ab1"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2685),
                            Description = "Footwear that covers the foot and ankle, often made of leather or rubber.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2687),
                            Name = "Boots"
                        },
                        new
                        {
                            Id = new Guid("9345d89f-cacb-4959-9e9d-6a34940c0edd"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2691),
                            Description = "Comfortable, lightweight footwear for indoor use.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2693),
                            Name = "Slippers"
                        },
                        new
                        {
                            Id = new Guid("15d2dc2f-1adb-4ff8-a8b3-4cad73f28c2f"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2697),
                            Description = "Open-toed footwear with straps or thongs, suitable for warm weather.",
                            GarmentCategoryId = new Guid("c8db0b12-0c6a-424e-857a-a5c4ce8b4876"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2699),
                            Name = "Sandals"
                        },
                        new
                        {
                            Id = new Guid("3d156704-da9e-496b-89be-170c0b76f1d6"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2705),
                            Description = "One-piece garments for women, typically with a fitted top and a flared skirt.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2707),
                            Name = "Dresses"
                        },
                        new
                        {
                            Id = new Guid("af407409-d7fb-40a0-909b-293da5ef52cb"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2711),
                            Description = "General category for lower body garments covering each leg separately.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2713),
                            Name = "Pants"
                        },
                        new
                        {
                            Id = new Guid("81182365-04aa-41c0-bf40-5fcdbc0bc486"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2717),
                            Description = "Garments designed for wear outside other clothes, such as coats and jackets.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2719),
                            Name = "Outerwear"
                        },
                        new
                        {
                            Id = new Guid("ee60ea9f-4401-426d-bf10-64a46e00177b"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2723),
                            Description = "Short-sleeved, typically cotton, casual shirt with a round neckline.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2725),
                            Name = "TShirts"
                        },
                        new
                        {
                            Id = new Guid("8c62355e-9b7f-41ba-b373-1ebf29d8447e"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2729),
                            Description = "Knitted or crocheted garments worn on the upper body for warmth.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2731),
                            Name = "Sweaters"
                        },
                        new
                        {
                            Id = new Guid("2a5cb8bb-d93b-4633-bc77-55ad77880e41"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2734),
                            Description = "Denim trousers, typically made of heavy cotton, with sturdy seams and pockets.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2736),
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = new Guid("b6569a0e-7f29-4e88-b6c6-b6e5f53a9794"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2740),
                            Description = "Garments worn around the waist, covering the lower body and often with a separate top.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2742),
                            Name = "Skirts"
                        },
                        new
                        {
                            Id = new Guid("ad7cb629-805c-46e9-b740-cd0f6fdbff6f"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2746),
                            Description = "Garments that cover the body from the waist to the knees, typically worn in warm weather.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2748),
                            Name = "Shorts"
                        },
                        new
                        {
                            Id = new Guid("77f0984a-5dff-4da9-82fa-fa292a2465f3"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2754),
                            Description = "Sleepwear, typically consisting of loose-fitting trousers and a top.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2756),
                            Name = "Pajamas"
                        },
                        new
                        {
                            Id = new Guid("4ebfeed8-4856-4f9d-b308-c1679c36189d"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2760),
                            Description = "Casual athletic shoes with a flexible sole, suitable for sports or everyday wear.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2762),
                            Name = "Sneakers"
                        },
                        new
                        {
                            Id = new Guid("c8937942-0ad1-47b2-9153-5a2ce27c73df"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2767),
                            Description = "Footwear that covers the foot and ankle, often made of leather or rubber.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2769),
                            Name = "Boots"
                        },
                        new
                        {
                            Id = new Guid("6ca9fff3-dc13-45fc-9340-e5bc2003bd2b"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2773),
                            Description = "Comfortable, lightweight footwear for indoor use.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2775),
                            Name = "Slippers"
                        },
                        new
                        {
                            Id = new Guid("22e88cb6-d547-41fa-a18b-50c0202f2d9e"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2779),
                            Description = "Open-toed footwear with straps or thongs, suitable for warm weather.",
                            GarmentCategoryId = new Guid("b45b6b96-d0ef-430c-bf8d-e46649485adf"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2781),
                            Name = "Sandals"
                        },
                        new
                        {
                            Id = new Guid("6a1fdafc-26b9-4fc5-a72b-5310b41ef336"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2785),
                            Description = "Garments designed for wear outside other clothes, such as coats and jackets.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2786),
                            Name = "Outerwear"
                        },
                        new
                        {
                            Id = new Guid("6dd2d687-5ae3-497c-839d-251e8abe38c7"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2790),
                            Description = "Knitted or crocheted garments worn on the upper body for warmth.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2792),
                            Name = "Sweaters"
                        },
                        new
                        {
                            Id = new Guid("927c6722-a26a-4352-9036-c24e8e7a81da"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2796),
                            Description = "Short-sleeved, typically cotton, casual shirt with a round neckline.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2798),
                            Name = "TShirts"
                        },
                        new
                        {
                            Id = new Guid("a8e7b5bc-8082-42b1-9fe8-6be9b1d9011f"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2804),
                            Description = "Garments that cover the body from the waist to the knees, typically worn in warm weather.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2806),
                            Name = "Shorts"
                        },
                        new
                        {
                            Id = new Guid("1d49b07a-4d6d-4b68-8bc3-b522358aa03e"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2810),
                            Description = "Denim trousers, typically made of heavy cotton, with sturdy seams and pockets.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2812),
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = new Guid("92c508fd-bb13-403c-9d9f-2bcf817ce900"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2816),
                            Description = "General category for lower body garments covering each leg separately.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2817),
                            Name = "Pants"
                        },
                        new
                        {
                            Id = new Guid("51e70609-0a71-4655-bf2c-14288b322b99"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2821),
                            Description = "Shorts designed for swimming or other water activities.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2823),
                            Name = "SwimTrunks"
                        },
                        new
                        {
                            Id = new Guid("e0b03fcc-a3c7-4212-aca6-2e7570002719"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2827),
                            Description = "General category for upper body garments with sleeves, often buttoned or collared.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2829),
                            Name = "Shirts"
                        },
                        new
                        {
                            Id = new Guid("33d5034d-ffd9-4bd2-8fa4-7cc8b10ab62b"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2833),
                            Description = "Clothing suitable for sports or casual activities.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2835),
                            Name = "Sportswear"
                        },
                        new
                        {
                            Id = new Guid("e3557e1d-7020-4680-8952-61c3b15d9446"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2838),
                            Description = "Sleepwear, typically consisting of loose-fitting trousers and a top.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2840),
                            Name = "Pajamas"
                        },
                        new
                        {
                            Id = new Guid("e78a9629-7633-49ab-8200-989b8a99efde"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2844),
                            Description = "Casual athletic shoes with a flexible sole, suitable for sports or everyday wear.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2846),
                            Name = "Sneakers"
                        },
                        new
                        {
                            Id = new Guid("077819d9-b591-4f1f-91b2-16e7adb883a8"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2852),
                            Description = "Footwear that covers the foot and ankle, often made of leather or rubber.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2854),
                            Name = "Boots"
                        },
                        new
                        {
                            Id = new Guid("0710eb81-a713-42e3-9a13-197e4a6e847f"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2858),
                            Description = "Comfortable, lightweight footwear for indoor use.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2860),
                            Name = "Slippers"
                        },
                        new
                        {
                            Id = new Guid("925ae526-ccad-4ab7-a917-655539f15c34"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2863),
                            Description = "Open-toed footwear with straps or thongs, suitable for warm weather.",
                            GarmentCategoryId = new Guid("3696b812-b36b-4400-9271-bd3d27466049"),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 838, DateTimeKind.Local).AddTicks(2865),
                            Name = "Sandals"
                        });
                });

            modelBuilder.Entity("GarmentShop.Domain.SaleAggregate.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("GarmentShop.Domain.UserAggregate.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6eaa891b-fa1d-4451-973e-c714411deda1"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(1340),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(1346),
                            Name = "Customer",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("71c68edc-5e93-47d1-b5ab-1c4e351322f5"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(1354),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(1356),
                            Name = "Manager",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("f55a934e-fb0d-4bb3-8211-787f2183d26e"),
                            CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(1360),
                            ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(1361),
                            Name = "Admin",
                            Type = 2
                        });
                });

            modelBuilder.Entity("GarmentShop.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("GarmentShop.Domain.SaleAggregate.Sale", b =>
                {
                    b.OwnsMany("GarmentShop.Domain.SaleAggregate.Entities.Order", "Orders", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("SaleOrderId");

                            b1.Property<Guid>("SaleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifiedDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id", "SaleId");

                            b1.HasIndex("SaleId");

                            b1.ToTable("SaleOrders", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("SaleId");

                            b1.OwnsOne("GarmentShop.Domain.SaleAggregate.ValueObjects.Invoice", "Invoice", b2 =>
                                {
                                    b2.Property<Guid>("OrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("OrderSaleId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("OtherCharges")
                                        .HasPrecision(10, 2)
                                        .HasColumnType("decimal(10,2)")
                                        .HasColumnName("OtherCharges");

                                    b2.Property<decimal>("ShippingAndHandling")
                                        .HasPrecision(10, 2)
                                        .HasColumnType("decimal(10,2)")
                                        .HasColumnName("ShippingAndHandling");

                                    b2.Property<decimal>("Tax")
                                        .HasPrecision(10, 2)
                                        .HasColumnType("decimal(10,2)")
                                        .HasColumnName("Tax");

                                    b2.Property<decimal>("TotalCost")
                                        .HasPrecision(10, 2)
                                        .HasColumnType("decimal(10,2)")
                                        .HasColumnName("TotalCost");

                                    b2.HasKey("OrderId", "OrderSaleId");

                                    b2.ToTable("SaleOrders");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderId", "OrderSaleId");
                                });

                            b1.OwnsOne("GarmentShop.Domain.SaleAggregate.ValueObjects.Payment", "Payment", b2 =>
                                {
                                    b2.Property<Guid>("OrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("OrderSaleId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Amount")
                                        .HasPrecision(10, 2)
                                        .HasColumnType("decimal(10,2)");

                                    b2.Property<DateTime>("Date")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("Method")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)")
                                        .HasColumnName("Method");

                                    b2.HasKey("OrderId", "OrderSaleId");

                                    b2.ToTable("SaleOrders");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderId", "OrderSaleId");
                                });

                            b1.OwnsMany("GarmentShop.Domain.SaleAggregate.Entities.OrderItem", "Items", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("OrderItemId");

                                    b2.Property<Guid>("SaleOrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("SaleId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<DateTime>("CreatedDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<Guid>("GarmentId")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("GarmentId");

                                    b2.Property<DateTime>("ModifiedDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<int>("Quantity")
                                        .HasColumnType("int")
                                        .HasColumnName("Quantity");

                                    b2.Property<decimal>("UnitPrice")
                                        .HasPrecision(10, 2)
                                        .HasColumnType("decimal(10,2)")
                                        .HasColumnName("UnitPrice");

                                    b2.HasKey("Id", "SaleOrderId", "SaleId");

                                    b2.HasIndex("SaleOrderId", "SaleId");

                                    b2.ToTable("OrderItems", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("SaleOrderId", "SaleId");
                                });

                            b1.Navigation("Invoice")
                                .IsRequired();

                            b1.Navigation("Items");

                            b1.Navigation("Payment")
                                .IsRequired();
                        });

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("GarmentShop.Domain.UserAggregate.Entities.Role", b =>
                {
                    b.OwnsMany("GarmentShop.Domain.UserAggregate.Entities.Permission", "Permissions", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PermissionId");

                            b1.Property<Guid>("RoleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifiedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Name");

                            b1.Property<int>("Type")
                                .HasMaxLength(50)
                                .HasColumnType("int")
                                .HasColumnName("Type");

                            b1.HasKey("Id", "RoleId");

                            b1.HasIndex("RoleId");

                            b1.ToTable("RolePermissions", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RoleId");

                            b1.HasData(
                                new
                                {
                                    Id = new Guid("ce92ab6c-3d7c-455d-8b26-922002ff9825"),
                                    RoleId = new Guid("6eaa891b-fa1d-4451-973e-c714411deda1"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(656),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(711),
                                    Name = "AddToCart",
                                    Type = 0
                                },
                                new
                                {
                                    Id = new Guid("e0b07f74-d2d6-496c-afc2-71a4a781b179"),
                                    RoleId = new Guid("6eaa891b-fa1d-4451-973e-c714411deda1"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(728),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(731),
                                    Name = "PlaceOrder",
                                    Type = 1
                                },
                                new
                                {
                                    Id = new Guid("421db341-8ea0-4875-8b52-1ed26972a623"),
                                    RoleId = new Guid("6eaa891b-fa1d-4451-973e-c714411deda1"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(735),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(737),
                                    Name = "ViewOrderHistory",
                                    Type = 2
                                },
                                new
                                {
                                    Id = new Guid("472bc7c4-dae3-463c-b1b5-762d4c768303"),
                                    RoleId = new Guid("6eaa891b-fa1d-4451-973e-c714411deda1"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(741),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(743),
                                    Name = "UpdateShippingAddress",
                                    Type = 3
                                },
                                new
                                {
                                    Id = new Guid("f0a6960c-9e4a-465d-b9a8-b3d70b6bf399"),
                                    RoleId = new Guid("71c68edc-5e93-47d1-b5ab-1c4e351322f5"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(747),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(749),
                                    Name = "EditItems",
                                    Type = 4
                                },
                                new
                                {
                                    Id = new Guid("4ac36a3b-ed8e-4fc3-aa94-46dab6c6ee4d"),
                                    RoleId = new Guid("71c68edc-5e93-47d1-b5ab-1c4e351322f5"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(753),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(755),
                                    Name = "DeleteItems",
                                    Type = 5
                                },
                                new
                                {
                                    Id = new Guid("e1c09865-b6fc-4d5e-9930-9fb019f64eee"),
                                    RoleId = new Guid("71c68edc-5e93-47d1-b5ab-1c4e351322f5"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(759),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(761),
                                    Name = "AddItems",
                                    Type = 6
                                },
                                new
                                {
                                    Id = new Guid("1733f994-77eb-48e8-a389-5311f4312dfe"),
                                    RoleId = new Guid("f55a934e-fb0d-4bb3-8211-787f2183d26e"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(802),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(804),
                                    Name = "ManageCustomers",
                                    Type = 7
                                },
                                new
                                {
                                    Id = new Guid("664f0827-48da-46b6-8a93-3b03c6012e7e"),
                                    RoleId = new Guid("f55a934e-fb0d-4bb3-8211-787f2183d26e"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(808),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(810),
                                    Name = "ManageUsers",
                                    Type = 8
                                },
                                new
                                {
                                    Id = new Guid("834767cf-c28c-4d3c-8cdc-08864de590fd"),
                                    RoleId = new Guid("f55a934e-fb0d-4bb3-8211-787f2183d26e"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(818),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(820),
                                    Name = "ManageRoles",
                                    Type = 9
                                },
                                new
                                {
                                    Id = new Guid("45d27273-2365-4860-a137-02532817486d"),
                                    RoleId = new Guid("f55a934e-fb0d-4bb3-8211-787f2183d26e"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(824),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(826),
                                    Name = "ManagePermissions",
                                    Type = 10
                                },
                                new
                                {
                                    Id = new Guid("cd7f3523-0402-492d-b278-16f01cf94286"),
                                    RoleId = new Guid("f55a934e-fb0d-4bb3-8211-787f2183d26e"),
                                    CreatedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(830),
                                    ModifiedDate = new DateTime(2023, 11, 19, 16, 45, 54, 817, DateTimeKind.Local).AddTicks(832),
                                    Name = "ManageOrders",
                                    Type = 11
                                });
                        });

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("GarmentShop.Domain.UserAggregate.User", b =>
                {
                    b.OwnsMany("GarmentShop.Domain.SaleAggregate.ValueObjects.SaleId", "SaleIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("SaleId");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId");

                            b1.ToTable("UserSaleIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsMany("GarmentShop.Domain.UserAggregate.Entities.UserRole", "Roles", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("UserRoleId");

                            b1.Property<Guid>("RoleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ModifiedDate")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id", "RoleId");

                            b1.HasIndex("RoleId");

                            b1.HasIndex("UserId");

                            b1.ToTable("UserRoles", (string)null);

                            b1.HasOne("GarmentShop.Domain.UserAggregate.Entities.Role", "Role")
                                .WithMany()
                                .HasForeignKey("RoleId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.Navigation("Role");
                        });

                    b.OwnsOne("GarmentShop.Domain.UserAggregate.ValueObjects.UserDetailInformation", "Information", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Address");

                            b1.Property<string>("City")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Country");

                            b1.Property<string>("FirstName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("PhoneNumber");

                            b1.Property<string>("ZipCode")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Information")
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("SaleIds");
                });
#pragma warning restore 612, 618
        }
    }
}
